#!/usr/bin/env ruby

ONE_LOCATION = ENV["ONE_LOCATION"]

if !ONE_LOCATION
    RUBY_LIB_LOCATION = "/usr/lib/one/ruby"
    VAR_LOCATION      = "/var/lib/one"
    ETC_LOCATION      = "/etc/one"
    LOCK_FILE         = "/var/lock/one/one"
else
    RUBY_LIB_LOCATION = ONE_LOCATION + "/lib/ruby"
    VAR_LOCATION      = ONE_LOCATION + "/var"
    ETC_LOCATION      = ONE_LOCATION + "/etc"
    LOCK_FILE         = VAR_LOCATION + "/.lock"
end

$: << RUBY_LIB_LOCATION
$: << RUBY_LIB_LOCATION + "/onedb"
$: << RUBY_LIB_LOCATION + "/onevc"

require 'onevc_backend'

if $0 == __FILE__    
    db = OneVCBackend::get_backend().db()
    
    ########################################################################
    # Virtual Clusters
    ########################################################################
    
    # Schema
    # CREATE TABLE vc_pool (oid INTEGER PRIMARY KEY, name TEXT, body TEXT, uid INTEGER, gid INTEGER);
    
    db.run("DROP TABLE IF EXISTS vc_pool;")
    db.run("CREATE TABLE vc_pool (oid INTEGER PRIMARY KEY, name TEXT, body TEXT, uid INTEGER, gid INTEGER);")
    
    ########################################################################
    # Node Types
    ########################################################################
    
    # Schema
    # CREATE TABLE node_types (oid INTEGER PRIMARY KEY, name TEXT, body TEXT, vcid INTEGER, tid INTEGER, nt_state INTEGER);
    
    db.run("DROP TABLE IF EXISTS node_types;")
    db.run("CREATE TABLE node_types (oid INTEGER PRIMARY KEY, name TEXT, body TEXT, number INTEGER, vcid INTEGER, tid INTEGER, nt_state INTEGER);")
    
    ########################################################################
    # Nodes
    ########################################################################
    
    # Schema
    # CREATE TABLE nodes (oid INTEGER PRIMARY KEY, vcid INTEGER, tid INTEGER, vmid INTEGER);
    
    db.run("DROP TABLE IF EXISTS nodes;")
    db.run("CREATE TABLE nodes (oid INTEGER PRIMARY KEY, vcid INTEGER, ntid INTEGER, vmid INTEGER);")
    
end
